@using Infiniti.MvcControllers
@using Intelledox.Produce
@{
    var defaultLogo = "<img src=\"" + Url.Content("~/Images/produce.svg") + "\" alt=\"Infiniti Logo\" height=\"56\" width=\"165\" /><span class=\"sr-only\">Infiniti</span>";
    var skin = Intelledox.Controller.SkinController.GetTenantSkin(UserSettings.BusinessUnit,ViewBag.ByPassSkinCache ?? false);
    if (skin.HasSkinSettings)
    {
    <link href="~/Styles/Skin?v=@Intelledox.Common.DateHelper.UtcDateTimeToJsString(skin.Published)" rel="stylesheet" />
        if (skin.Logo != null && skin.Logo.Length > 0)
            {
                defaultLogo = string.Empty;
            }
    }
}
<header class="navbar navbar-inverse navbar-fixed-top ix-nav">
    <div class="container-fluid">
        <div id="navbar-header">
            <button class="navbar-toggle collapsed" type="button" data-toggle="collapse" data-target=".ix-navbar-collapse">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            @Html.Raw(ApplicationSettings.ThemeHeaderLogoSkin)

            <a class="navbar-brand" href="~/Home" title="@ApplicationSettings.ThemePageTitle">@Html.Raw(defaultLogo)</a>

        </div>

        <nav class="collapse navbar-collapse ix-navbar-collapse">
            <ul class="nav navbar-nav">
                @if (ViewBag.CurrentTab != MenuTab.Home)
                {
                    <li class="@(ViewBag.CurrentTab == MenuTab.Home ? "active" : "")" id="HomeMenu">
                        <a href="~/Home">@Intelledox.Produce.Resources.Strings.Home</a>
                    </li>
                }
                @if (!Infiniti.MvcControllers.UserSettings.IsGuest && !Infiniti.MvcControllers.UserSettings.IsTemporaryUser && ViewBag.CurrentTab == MenuTab.Home)
                {
                    if (ViewBag.ShowProfilePage)
                    {
                    <li class="@(ViewBag.CurrentTab == MenuTab.Profile ? "active" : "")" id="ProfileMenu">
                        <a href="~/Account">@Intelledox.Produce.Resources.Strings.Profile</a>
                    </li>
                    }
                    if (ViewBag.ShowActiveForms)
                    {
                    <li class="@(ViewBag.CurrentTab == MenuTab.FormActivity? "active" : "")" id="InProgressMenu">
                        @Html.ActionLink(Intelledox.Produce.Resources.Strings.FormActivity, "Index", "FormActivity")
                    </li>
                    }
                    if (ViewBag.ShowContacts)
                    {
                    <li class="@(ViewBag.CurrentTab == MenuTab.Contact ? "active" : "")" id="ContactsMenu">
                        <a href="~/Contact">@Intelledox.Produce.Resources.Strings.AddressBook</a>
                    </li>
                    }
                    if (ViewBag.ShowAnswerFiles)
                    {
                    <li class="@(ViewBag.CurrentTab == MenuTab.AnswerFiles ? "active" : "")" id="AnswerFilesMenu">
                        @Html.ActionLink(Intelledox.Produce.Resources.Strings.AnswerFiles, "Index", "AnswerFile")
                    </li>
                    }
                    if (ViewBag.ShowDocuments)
                    {
                    <li class="@(ViewBag.CurrentTab == MenuTab.Documents ? "active" : "")" id="DocumentsMenu">
                        @Html.ActionLink(Intelledox.Produce.Resources.Strings.Documents, "Index", "Document")
                    </li>
                    }
                }
                @if (!String.IsNullOrEmpty(ViewBag.BackUrl))
                {
                    <li id="BackMenu">
                        <a href="@ViewBag.BackUrl">@Intelledox.Produce.Resources.Strings.Back</a>
                    </li>
                }
            </ul>

            <ul class="nav navbar-nav navbar-right">
                @if (ViewBag.CurrentTab == MenuTab.Home)
                {
                    <li id="SearchWideScreen">
                        <input id="SearchTerm" name="SearchTerm" value="@Model.SearchTerm" class="form-control" placeholder="@Intelledox.Produce.Resources.Strings.Search" maxlength="50" aria-label="@Intelledox.Produce.Resources.Strings.Search" />
                    </li>
                }

                @if (Infiniti.MvcControllers.UserSettings.IsAdmin && !String.IsNullOrEmpty(Infiniti.MvcControllers.ApplicationSettings.ManageUrl))
                {
                    <li id="ManageMenu">
                        <a href="@Infiniti.MvcControllers.ApplicationSettings.ManageUrl">@Intelledox.Produce.Resources.Strings.Manage</a>
                    </li>
                }
                @if (Infiniti.MvcControllers.UserSettings.IsGuest)
                {
                    <li id="LogoutMenu">
                        <a href="~/Account/Challenge">@Intelledox.Produce.Resources.Strings.Login</a>
                    </li>
                }
                else if (!System.Security.Claims.ClaimsPrincipal.Current.HasClaim(c => c.Type == Intelledox.Common.ConstantValues.NOLOGOUT_CLAIM))
                {
                    <li id="LogoutMenu">
                        <a id="lnkSignOut" class="signout-link" href="~/Account/LogOff">@Intelledox.Produce.Resources.Strings.LogOut</a>
                    </li>
                }
            </ul>
        </nav>

        <script type="text/javascript">
            function updateGrid() {
                $('#SearchTermThin').val($('#SearchTerm').val());
                $('#SearchUpdateResults').load('@Url.Action("Index", "Home")?searchTerm=' + encodeURIComponent($('#SearchTerm').val()));
            }

            var autoTimer;
            $("#SearchTerm").on('keyup input', function (e) {
                e.preventDefault();
                clearTimeout(autoTimer);
                autoTimer = setTimeout(updateGrid, 300);
            });
        </script>

        <div id="ExtraDiv1"></div>
        <div id="ExtraDiv2"></div>
        <div id="ExtraDiv3"></div>
    </div>
</header>