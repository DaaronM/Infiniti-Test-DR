@using Infiniti.MvcControllers
@inherits System.Web.Mvc.WebViewPage<Intelledox.Produce.FinishViewModel>
@{
    int index = 0;
    var defaultLogo = "<img src=\"" + Url.Content("~/Images/produce.svg") + "\" alt=\"Infiniti Logo\" height=\"56\" width=\"165\" /><span class=\"sr-only\">Infiniti</span>";
    var skin = Intelledox.Controller.SkinController.GetTenantSkin(UserSettings.BusinessUnit);
    if (skin.HasSkinCssSettings)
    {
        var skinPublishedDate = Intelledox.Common.DateHelper.UtcDateTimeToJsString(skin.Published);
        @section AddToHead
        {
        <link href="~/Styles/Skin?v=@skinPublishedDate" rel="stylesheet" />
        }
        if (skin.Logo != null && skin.Logo.Length > 0)
        {
            defaultLogo = string.Empty;
        }
    }
}
<form method="post" id="aspnetForm">
    <input type="hidden" name="ShowWorkflow" value="@Model.ShowWorkflow" />
    <input type="hidden" name="PageTitle" value="@Model.PageTitle" />
    <input type="hidden" name="PostGenerateText" value="@Model.PostGenerateText" />
    @if (Model.HeaderVisible)
    {
        <header class="navbar navbar-inverse navbar-fixed-top ix-nav">
            <div class="container-fluid">
                <div id="navbar-header">
                    <button class="navbar-toggle collapsed" type="button" data-toggle="collapse" data-target=".ix-navbar-collapse">
                        <span class="sr-only">Toggle navigation</span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                    </button>
                    @{
                        var homeUrl = "#";
                        if (Model.GoHomeVisible)
                        {
                            homeUrl = ApplicationSettings.ProduceUrl + (Infiniti.MvcControllers.ApplicationSettings.ProduceUrl.EndsWith("/") ? "" : "/") + "Home/GoToHome";
                        }
                    }
                    <a class="navbar-brand" href="@homeUrl" id="customLogo">
                        <div id="ixInfinitiLogo">@Html.Raw(defaultLogo)</div>
                    </a>
                </div>
                <nav class="collapse navbar-collapse ix-navbar-collapse">
                    <ul class="nav navbar-nav">
                        @if (Model.GoHomeVisible)
                        {
                            <li id="liGoHome">
                                <a id="lnkGoHome" href="~/Home/GoToHome">@Intelledox.Produce.Resources.Strings.Home</a>
                            </li>
                        }
                    </ul>
                    <p class="navbar-text form-title hidden-xs">@Model.ProjectName</p>
                    <ul class="nav navbar-nav navbar-right">
                        @if (Model.LogoutVisible)
                        {
                            <li id="LogoutMenu">
                                <a id="lnkSignOut" href="~/Account/LogOff" title="@Intelledox.Produce.Resources.Strings.LogOut">@Intelledox.Produce.Resources.Strings.LogOut</a>
                            </li>
                        }
                    </ul>
                </nav>
            </div>
        </header>
    }
    <div class="container-fluid ix-header-body wizardContent">
        <table class="NoPadding NoSpacing" style="width:100%" role="presentation">
            <tr>
                <td style="vertical-align:top">
                    @if (!string.IsNullOrEmpty(Model.GoogleAnalyticsCode))
                    {
                        <script>
                        (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
                            (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
                                m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
                        })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

                        ga('create', '@Model.GoogleAnalyticsCode', 'auto');
                        ga('send', 'event', 'form', 'submission', '@Model.ProjectData');
                        </script>
                    }

                    <span id="WizardFinishHeader">@Html.Raw(ApplicationSettings.ThemeWizardHeader)</span>
                    <span id="lblBefore">@Html.Raw(ApplicationSettings.ThemeFinishBefore)</span>
                    @if (Model.ExpiredContentVisible)
                    {
                        <span id="lblExpiredContent">@Html.Raw(ApplicationSettings.ThemeExpiredContent)</span>
                    }
                    @if (Model.ActionFailedVisible)
                    {
                        <span id="lblActionFailed" class="finishError">@Model.ActionFailedText</span>
                    }
                    @if (Model.ErrorOccurredVisible)
                    {
                        <span id="lblErrorOccurred" class="finishError">@(string.IsNullOrEmpty(ApplicationSettings.ThemeErrorsOccurred) ? Intelledox.Produce.Resources.Strings.ErrorsOccurred : ApplicationSettings.ThemeErrorsOccurred)</span>
                    }
                    @if (Model.ErrorMessageVisible)
                    {
                        <span id="lblErrorOccurred" class="finishError">@Intelledox.Produce.Resources.Strings.FileNoLongerAvailable</span>
                    }

                    <div id="divTemplateFinish">
                        <div id="docFinish">
                            <table class="NoBorder" width="100%" style="border-spacing:1px;" role="presentation">
                                <tr>
                                    <td>
                                        <div class="action-debug">@Html.Raw(Model.ActionTroubleshootingText)</div>
                                    </td>
                                </tr>

                                @if (!Model.ShowWorkflow)
                                {
                                    <tr>
                                        <td class="cell-title" style="padding:5px">
                                            @Html.Raw(Model.PageTitle)
                                            @if (Model.AllowRestart)
                                            {
                                                <a id="lnkRestart" class="pull-right" style="font-size:14px;font-weight:500" href="~/wizard/@(Request.QueryString["GroupID"])/?logguid=@(Request.QueryString["logGuid"])">@Intelledox.Produce.Resources.Strings.Restart</a>
                                            }
                                        </td>
                                    </tr>
                                }

                                @if (Model.AllowDocumentDownload)
                                {
                                    <tr>
                                        <td class="cell-heading" style="padding:5px">
                                            <span id="lblFileSummary">@Model.FileSummaryHeading</span>
                                            @if (Model.DownloadCount > 0)
                                            {
                                                <span id="dAll">&nbsp;(<a href="~/DocumentDownload.ashx/@(Intelledox.Produce.Resources.Strings.Documents).zip?getAll=true&JobId=@(Model.JobGuid.ToString())&logGuid=@(Uri.EscapeDataString(Model.LogInteractions ? Model.LogGuid.ToString() :""))" id="lnkDownloadAll" class="downloadAllLink">@Intelledox.Produce.Resources.Strings.DownloadAll</a>)</span>
                                            }
                                        </td>
                                    </tr>
                                    <tr>
                                        <td class="cell-normal" style="padding:5px">
                                            <span id="lblFiles">
                                                @if (Model.DownloadCount == 0)
                                                {
                                                    @Intelledox.Produce.Resources.Strings.NoDocs
                                                }
                                                else
                                                {
                                                    <ul>
                                                        @{
                                                            while (index < Model.CreatedDocuments.Count && index < 30)
                                                            {
                                                                Intelledox.Model.Document doc = Model.CreatedDocuments[index];

                                                                if (doc.Downloadable)
                                                                {
                                                                    <text>
                                                                        <li>
                                                                            <a href="~/DocumentDownload.ashx/@(Uri.EscapeDataString(Intelledox.Common.Functions.MakeValidFileName(doc.DisplayName)) +
                                                                                doc.Extension)?FileId=@(Uri.EscapeDataString(doc.DocumentId.ToString()))&Extension=@(Uri.EscapeDataString(doc.Extension == null ? "" : doc.Extension))&JobId=@(Uri.EscapeDataString(Model.JobGuid.ToString()))&logGuid=@(Uri.EscapeDataString(Model.LogInteractions ? Model.LogGuid.ToString() :""))" class="fileDownloadLink">@(doc.DisplayName + (string.IsNullOrEmpty(doc.Extension) ? "" : " (" + doc.Extension.Substring(1) + ")"))</a>
                                                                            </li>
                                                                    </text>
                                                                }

                                                                index += 1;
                                                            }
                                                            if (Model.CreatedDocuments.Count > 30)
                                                            {
                                                                <text>
                                                                    <li>@Intelledox.Produce.Resources.Strings.TooManyDocuments</li></text>
                                                            }
                                                        }
                                                    </ul>
                                                }
                                            </span>
                                        </td>
                                    </tr>
                                }

                                @if (!Model.ShowWorkflow)
                                {
                                    if (!string.IsNullOrEmpty(Model.PostGenerateText))
                                    {
                                        <tr>
                                            <td class="cell-normal" style="padding:5px;">@Html.Raw(Model.PostGenerateText)</td>
                                        </tr>
                                    }

                                    @Html.Raw(Model.CustomUIText)

                                }
                                <tr>
                                    <td class="cell-footer" style="padding:5px;text-align:center">&nbsp;</td>
                                </tr>
                            </table>
                        </div>

                        @if (Model.ShowWorkflow)
                        {
                            <div class="action-debug">@Html.Raw(Model.ActionTroubleshootingText)</div>
                            if (Model.WorkflowDoneVisible)
                            {
                                <span id="lblWorkflowDone">@Html.Raw(string.IsNullOrEmpty(ApplicationSettings.ThemeWorkflowStep) ? Model.WorkflowMessage : ApplicationSettings.ThemeWorkflowStep)</span>
                            }
                            <table class="NoBorder" width="100%" style="border-spacing:1px;" role="presentation">

                                @Html.Raw(Model.CustomUIText)
                            </table>
                        }
                    </div>
                    <span id="lblAfter">@Html.Raw(ApplicationSettings.ThemeFinishAfter)</span>
                    <span id="WizardFinishFooter">@Html.Raw(ApplicationSettings.ThemeWizardFooter)</span>

                </td>
            </tr>
        </table>
    </div>
</form>
